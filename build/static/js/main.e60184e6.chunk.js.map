{"version":3,"sources":["components/errorMessage/ErrorMessage.js","components/errorBoundary/ErrorBoundary.js","service/MovieService.js","hooks/http.hook.js","components/NavBar/NavBar.js","components/spinner/Spinner.js","components/movieCarousel/MovieCarousel.js","components/moviesList/MoviesList.js","components/mainList/MainList.js","components/pages/MainPage.js","components/searchList/SearchList.js","components/pages/SearchPage.js","components/genreList/GenreList.js","components/pages/GenrePage.js","components/recommendationsCarousel/RecommendationsCarousel.js","components/pages/SingleMoviePage.js","components/app/App.js","index.js"],"names":["ErrorMessage","className","src","alt","ErrorBoundary","state","error","errorInfo","console","log","this","setState","props","children","Component","useMovieService","useState","loading","setLoading","setError","request","useCallback","URL","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getConfiguration","res","images","getTopRatedMovies","results","map","modifiedItem","getPopularMovies","page","requesturl","getGenres","genres","getMoviesByGenre","id","requestUrl","getSearchResults","query","getDetails","responseUrl","modifyMovieItem","getRecommendations","item","title","overview","poster_path","release_date","slice","genre","name","popularity","production_companies","companie","production_countries","country","runtime","budget","original_title","NavBar","setGernres","dropMenu","setDropMenu","setQuery","useEffect","then","MovieService","toggleDropMenu","markup","length","onClick","document","toUpperCase","to","type","style","gridTemplateRows","gridTemplateColumns","gridGap","onSubmit","e","preventDefault","onChange","target","value","placeholder","Spinner","MovieCarousel","onMovieSelect","carouselData","setCarouselData","base_url","poster_sizes","arr","url","spinner","items","i","height","renderItems","margin","lazyLoad","loop","autoplay","autoplayTimeout","autoplayHoverPause","MoviesList","baseURL","onRequest","ended","newPageLoading","content","classes","disabled","MainList","setNewPageLoading","setData","setPage","setEnded","onItemsLoaded","catch","onError","newData","errorMessage","MainPage","setBaseURL","SearchList","useParams","setValue","toLowerCase","SearchPage","GenreList","genreID","setGenre","GenrePage","RecommendationsCarousel","View","reccomendationsData","SingleMoviePage","movieID","moiveData","setMovieData","setReccomendationsData","updateMovie","onReccomendationsLoaded","onMovieLoaded","App","exact","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e60184e6.chunk.js","sourcesContent":["const ErrorMessage = () => {\n    return (\n        <div className=\"error\">\n            <img src=\"https://media.istockphoto.com/vectors/error-like-laptop-with-dead-emoji-cartoon-flat-minimal-trend-modern-vector-id1011988208?k=20&m=1011988208&s=612x612&w=0&h=XrR_WsVGUrB8b5px_kG0B_llfeHcRNlqEzgCWf75EfE=\" alt=\"errorMessage\" />\n        </div>\n    )\n}\n\nexport default ErrorMessage;","import { Component } from \"react\";\nimport ErrorMessage from '../errorMessage/ErrorMessage'\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: false\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.log(error, errorInfo);\n        this.setState({\n            error: true\n        })\n    }\n\n    render() {\n        if(this.state.error) {\n            return <ErrorMessage/>\n        }\n\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundary;","import {useHttp} from '../hooks/http.hook'\n\nconst useMovieService = () =>  {\n    const {loading, request, error, clearError} = useHttp();\n\n    const _apiBase = 'https://api.themoviedb.org/3/'\n    const _apiKey = 'api_key=e352cfad536dcafc2d9540798bc763ce';\n\n    const getConfiguration = async () => {\n        const res = await request(`${_apiBase}configuration?${_apiKey}`)\n        return res.images\n    }\n\n    const getTopRatedMovies = async () => {\n        const res = await request(`${_apiBase}movie/top_rated?${_apiKey}&language=ru-RU&page=10`)\n        return res.results.map(modifiedItem)\n    }\n    \n    const getPopularMovies = async (page = 1) => {\n        const requesturl = `${_apiBase}movie/popular?${_apiKey}&language=ru-RU&page=${page}`\n        const res = await request(requesturl)\n\n        return res.results.map(modifiedItem)\n    }\n\n    const getGenres = async () => {\n        const res = await request(`${_apiBase}genre/movie/list?${_apiKey}&language=ru-RU`)\n\n        return res.genres;\n    }\n\n\n    const getMoviesByGenre = async (page = 1, id) => {\n        const requestUrl = `${_apiBase}discover/movie?${_apiKey}&language=ru-RU&sort_by=popularity.desc&include_adult=false&include_video=false{true}&page=${page}&primary_release_date.gte=1990-01-01&primary_release_date.lte=1999-12-31&vote_average.gte=6&with_genres=${id}`\n        const res = await request(requestUrl)\n        return res.results;\n    }\n\n    const getSearchResults = async (page = 1, query) => {\n        const res = await request(`${_apiBase}search/movie?${_apiKey}&language=ru-RU&page=${page}&query=${query}`)\n        return res.results.map(modifiedItem);\n    }\n\n    const getDetails = async (id) => {\n        const responseUrl = `${_apiBase}movie/${id}?${_apiKey}&language=ru-RU`\n        const res = await request(responseUrl)\n        return modifyMovieItem(res);\n    }\n\n    const getRecommendations = async (id) => {\n        const responseUrl = `${_apiBase}movie/${id}/recommendations?${_apiKey}&language=ru-RU&page=1`\n        const res = await request(responseUrl)\n        return res.results.map(modifiedItem);\n    }\n\n    const modifiedItem = (item) => {\n        return {\n            id: item.id,\n            title: item.title,\n            overview: item.overview,\n            poster_path: item.poster_path,\n            release_date: item.release_date.slice(0, 4)\n        }\n    }\n\n    const modifyMovieItem = (item) => ({\n        poster_path: item.poster_path,\n        genres: [...item.genres.map(genre => genre.name)],\n        overview: item.overview,\n        popularity: item.popularity,\n        production_companies: [...item.production_companies.map(companie => companie.name)],\n        production_countries: [...item.production_countries.map(country => country.name)],\n        release_date: item.release_date.slice(0, 4),\n        runtime: item.runtime + ' мин',\n        title: item.title,\n        budget: item.budget + '$',\n        original_title: item.original_title\n    })\n    \n    return {loading, error, clearError, getConfiguration, getTopRatedMovies, getPopularMovies, getGenres, getMoviesByGenre, getSearchResults, getDetails, getRecommendations}\n}\nexport default useMovieService;\n\n\n// \"request_token\": \"38093ceeb15e8e9f1254b1c3d6325084c2a3c21e\"\n\n\n// eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlMzUyY2ZhZDUzNmRjYWZjMmQ5NTQwNzk4YmM3NjNjZSIsInN1YiI6IjYxNTYwMWFmZDIxNDdjMDA2MzMwN2NjZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.OxWmaxs_4xTBKW6LSbKGyObrGpVspdImhG2tUGagaeA\n\n// session fac3f03c2da337d9afc1ddbd011f8d9bfd4f2a1b","import {useState, useCallback} from 'react'\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(null)\n\n    const request = useCallback(async (URL, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n        setLoading(true)\n\n        try {\n            const response = await fetch(URL, {method, body, headers})\n\n            if(!response.ok) {\n                throw new Error(`Could not fetch ${URL}, status: ${response.status}`)\n            }\n\n            const data = await response.json()\n            setLoading(false)\n            return data\n\n        } catch(error){\n            setLoading(false)\n            setError(error.message)\n            throw error;\n        }\n    }, [])\n\n    const clearError = useCallback(() => setError(null), [])\n\n    return {loading, request, error, clearError}\n}","import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport MovieService from \"../../service/MovieService\";\nimport \"./NavBar.css\";\n\nconst NavBar = () => {\n\n  const [genres, setGernres] = useState([])\n  const [dropMenu, setDropMenu] = useState(false)\n  const [query, setQuery] = useState('')\n\n  useEffect(() => {\n    getGenres().then(data => setGernres(data))\n  }, [])\n\n  const {getGenres} = MovieService();\n\n  const toggleDropMenu = () => {\n    setDropMenu(!dropMenu)\n  }\n\n  const renderItems = (items) => {\n    return items.map(item => (\n      <li key={item.id} onClick={() => {\n        toggleDropMenu()\n        document.title = item.name[0].toUpperCase() + item.name.slice(1)\n        }}>\n        <Link to={`/genre/${item.id}`} className=\"dropdown-item\">\n          {item.name}\n        </Link>\n      </li>\n    ));\n  };\n    const markup = genres.length && renderItems(genres);\n    const style = {\n      'display': 'grid',\n      gridTemplateRows: '1fr 1fr 1fr',\n      gridTemplateColumns: '1fr 1fr 1fr',\n      gridGap: '2vw',\n    }\n    return (\n      <div className=\"nav-wrapper\">\n        <div className=\"container\">\n        <Link to=\"/\"\n                className=\"btn btn-secondary mr-3\"\n                type=\"button\"\n                onClick={() => document.title = 'Movies App'}\n              >\n                Home page\n              </Link>\n          <div className=\"dropdown\">\n              <button\n                className=\"btn btn-secondary\"\n                type=\"button\"\n                onClick={toggleDropMenu}\n              >\n                Жанры\n              </button>\n              {dropMenu && \n                <ul className=\"dropdown-menu\" style={style}>\n                  {markup}\n                </ul>\n              }\n          </div>\n\n          <div className=\"search-container\">\n            <form onSubmit={(e) => e.preventDefault()}>\n              <input\n                onChange={(e) => setQuery(e.target.value)}\n                type=\"text\"\n                placeholder=\"Search..\"\n                name=\"search\"\n                value={query}\n              />\n              <Link to={`/search/${query}`}>\n                <button \n                  onClick={() => {\n                    setQuery('')\n                  }} \n                  type=\"submit\">\n                  <i className=\"fa fa-search\"></i>\n                </button>\n              </Link>\n              \n            </form>\n          </div>\n        </div>\n      </div>\n    );\n}\n\nexport default NavBar;","import './spinner.css'\n\nconst Spinner = () => {\n    return <div className=\"loader\"></div>\n}\n\nexport default Spinner;","import { useState, useEffect } from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nimport Spinner from '../spinner/Spinner'\n\nimport MovieService from \"../../service/MovieService\";\nimport OwlCarousel from \"react-owl-carousel\";\nimport \"owl.carousel/dist/assets/owl.carousel.css\";\nimport \"owl.carousel/dist/assets/owl.theme.default.css\";\nimport \"./movieCarousel.css\";\n\nconst MovieCarousel = ({onMovieSelect}) => {\n  const [carouselData, setCarouselData] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  const {getConfiguration, getTopRatedMovies} = MovieService();\n\n  useEffect(() => {\n    getConfiguration().then(({ base_url, poster_sizes }) => {\n      getTopRatedMovies().then((data) => {\n        const arr = data.map(item => {\n          return {\n            url: base_url.slice(0, -1) + \"/\" + poster_sizes[5] + item.poster_path,\n            id: item.id,\n          }\n          }\n        );\n        setCarouselData(arr)\n      });\n    });\n  }, [])\n\n  useEffect(() => {\n    setLoading(false)\n  }, [carouselData])\n\n  const renderItems = (items) => {\n    const markup = items.map((item, i) => (\n      <Link to={`/movie/${item.id}`} key={i}>\n      <div className=\"item\">\n        <img src={item.url} alt=\"\" height={300} />\n      </div>\n      </Link>\n\n    ));\n    return markup;\n  };\n    const spinner = loading ? <Spinner/> : null;\n    const items = (! loading && carouselData.length) && renderItems(carouselData);\n    const options = {\n      items: 5,\n      margin: 20,\n      lazyLoad: true,\n      loop: true,\n      autoplay: true,\n      autoplayTimeout: 3000,\n      autoplayHoverPause: true,\n    };\n\n    return (\n      <div className=\"overfvow pt-2 bg-dark\">\n        <div className=\"container\">\n          {carouselData.length && (\n            <OwlCarousel className=\"owl-theme\" {...options}>\n              {spinner}\n              {items}\n            </OwlCarousel>\n          )}\n        </div>\n      </div>\n    );\n}\n\nexport default MovieCarousel;\n","import { Link } from 'react-router-dom';\nimport \"./MoviesList.css\";\n\nconst MoviesList = ({data, baseURL, onRequest, ended, newPageLoading}) => {\n  \n  const renderItems = (items) => {\n    return items.map((item, i) => {\n      return (\n        <div key={i}>\n          <Link to={`/movie/${item.id}`} className=\"card\">\n            <div className=\"card-ref\">\n              <img\n                src={item.poster_path ? baseURL + item.poster_path : 'https://cdn.browshot.com/static/images/not-found.png'}\n                className=\"card-img-top\"\n                alt={item.title}\n                height=\"300\"\n              />\n              <div className=\"card-body\">\n                <p className=\"card-title\">{item.title}</p>\n                <p className=\"card-text\">{item.release_date}</p>\n              </div>\n            </div>\n            <div className=\"item__name\">{item.title}</div>\n          </Link>\n        </div>\n      );\n    });\n  };\n    const content = renderItems(data);\n    const classes = data.length && data.length < 5 ? `row row-cols-1 row-cols-md-${data.length} g-4` : 'row row-cols-1 row-cols-md-5 g-4'\n    return (\n      <>\n        <div className=\"bg-light pt-3 mb-3\">\n        <div className=\"container\">\n          <div className={classes}>\n            {content}\n            <button\n              className=\"btn btn-secondary mx-auto mb-3\"\n              type=\"button\"\n              onClick={onRequest}\n              style={{'display': ended ? 'none' : 'block'}}\n              disabled={newPageLoading}\n            >\n              Load more\n            </button>\n          </div>\n        </div>\n        </div>\n      </>\n    );\n  \n}\n\nexport default MoviesList;\n","import {useState, useEffect} from 'react'\n\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport Spinner from '../spinner/Spinner'\n\nimport MovieService from '../../service/MovieService'\nimport MoviesList from '../moviesList/MoviesList'\n\n\nconst MainList = ({baseURL}) => {\n\n    const [loading, setLoading] = useState(true)\n    const [newPageLoading, setNewPageLoading] = useState(false)\n    const [error, setError] = useState(false)\n    const [data, setData] = useState([])\n    const [page, setPage] = useState(1)\n    const [ended, setEnded] = useState(false)\n\n    useEffect(() => {\n        setPage(1)\n        onRequest()\n    }, [])\n\n    const {getPopularMovies} = MovieService()\n\n    const onRequest = () => {\n        setNewPageLoading(true)\n        getPopularMovies(page).then(onItemsLoaded).catch(onError)\n    }\n\n    const onItemsLoaded = (newData) => {\n        newData.length < 20 ? setEnded(true) : setEnded(false)\n        setLoading(true)\n        setData([...data, ...newData])\n        setPage(page + 1)\n        setLoading(false)\n        setNewPageLoading(false)\n    }\n\n    const onError = () => {\n        setLoading(false)\n        setError(true)\n    }\n\n    const spinner = loading ? <Spinner/> : null;\n    const errorMessage = error ? <ErrorMessage/> : null; \n    const content = !(loading && error) ? <MoviesList onRequest={onRequest} data={data} baseURL={baseURL} ended={ended} newPageLoading={newPageLoading}/> : null;\n\n    return (\n        <>\n            {spinner}\n            {errorMessage}\n            {content}\n        </>\n    )\n}\n\nexport default MainList;","import useMovieService from \"../../service/MovieService\"\n\nimport {useState, useEffect} from 'react'\n\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\"\n\nimport MovieCarousel from \"../movieCarousel/MovieCarousel\"\nimport MainList from \"../mainList/MainList\"\n\nconst MainPage = () => {\n\n    const [baseURL, setBaseURL] = useState('')\n\n    const {getConfiguration} = useMovieService();\n\n  useEffect(() => {\n    getConfiguration().then(({ base_url, poster_sizes }) => setBaseURL(`${base_url}${poster_sizes[5]}`))\n  }, [])\n\n    return (\n        <>\n            \n                <ErrorBoundary>\n                    <MovieCarousel />\n                </ErrorBoundary>\n\n                <ErrorBoundary>\n                    <MainList baseURL={baseURL} />\n                </ErrorBoundary>\n        </>\n    )\n}\n\nexport default MainPage;","import {useState, useEffect} from 'react'\nimport {useParams} from 'react-router-dom'\n\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport Spinner from '../spinner/Spinner'\n\nimport MovieService from '../../service/MovieService'\nimport MoviesList from '../moviesList/MoviesList'\n\n\nconst SearchList = ({baseURL}) => {\n\n    const {query} = useParams()\n\n    const [value, setValue] = useState(query)\n    const [loading, setLoading] = useState(true)\n    const [newPageLoading, setNewPageLoading] = useState(false)\n    const [error, setError] = useState(false)\n    const [data, setData] = useState([])\n    const [page, setPage] = useState(1)\n    const [ended, setEnded] = useState(false)\n\n    useEffect(() => {\n        onRequest()\n    }, [])\n\n    useEffect(() => {\n        setPage(1)\n        setData([])\n        setValue(query)\n        document.title = query[0].toUpperCase() + query.slice(1).toLowerCase()\n    }, [query])\n\n    useEffect(() => {\n        onRequest()\n    }, [value])\n\n    const {getSearchResults} = MovieService()\n\n    const onRequest = () => {\n        setNewPageLoading(true)\n        getSearchResults(page, query).then(onItemsLoaded).catch(onError)\n    }\n\n    const onItemsLoaded = (newData) => {\n        newData.length < 20 ? setEnded(true) : setEnded(false)\n        setLoading(true)\n        setData([...data, ...newData])\n        setPage(page + 1)\n        setLoading(false)\n        setNewPageLoading(false)\n    }\n\n    const onError = () => {\n        setLoading(false)\n        setError(true)\n    }\n\n    const spinner = loading ? <Spinner/> : null;\n    const errorMessage = error ? <ErrorMessage/> : null; \n    const content = !(loading && error) ? <MoviesList onRequest={onRequest} data={data} baseURL={baseURL} ended={ended} newPageLoading={newPageLoading}/> : null;\n\n    return (\n        <>\n            {spinner}\n            {errorMessage}\n            {content}\n        </>\n    )\n}\n\nexport default SearchList;","import {useState, useEffect} from 'react';\n\nimport useMovieService from '../../service/MovieService';\n\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\nimport SearchList from '../searchList/SearchList';\n\nconst SearchPage = () => {\n    const [baseURL, setBaseURL] = useState('')\n\n    const {getConfiguration} = useMovieService();\n\n  useEffect(() => {\n    getConfiguration().then(({ base_url, poster_sizes }) => setBaseURL(`${base_url}${poster_sizes[5]}`))\n  }, [])\n\n  return (\n      <>\n        <ErrorBoundary>\n            <SearchList baseURL={baseURL} />\n        </ErrorBoundary>;\n      </>\n  )\n}\n\n\nexport default SearchPage;","import {useState, useEffect} from 'react'\nimport { useParams } from 'react-router-dom'\n\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport Spinner from '../spinner/Spinner'\n\nimport MovieService from '../../service/MovieService'\nimport MoviesList from '../moviesList/MoviesList'\n\n\nconst GenreList = ({baseURL}) => {\n\n    const {genreID} = useParams()\n\n    const [genre, setGenre] = useState(genreID)\n    const [loading, setLoading] = useState(true)\n    const [newPageLoading, setNewPageLoading] = useState(false)\n    const [error, setError] = useState(false)\n    const [data, setData] = useState([])\n    const [page, setPage] = useState(1)\n    const [ended, setEnded] = useState(false)\n\n\n    useEffect(() => {\n        onRequest()\n    }, [])\n\n    useEffect(() => {\n        setData([])\n        setPage(1)\n        setGenre(genreID)\n    }, [genreID]) \n\n    useEffect(() => {\n        onRequest()\n    }, [genre])\n\n    const {getMoviesByGenre} = MovieService()\n\n    const onRequest = () => {\n        setNewPageLoading(true)\n        if(!genreID) {\n            return\n        }\n        getMoviesByGenre(page, genreID).then(onItemsLoaded).catch(onError)\n    }\n\n    const onItemsLoaded = (newData) => {\n        newData.length < 20 ? setEnded(true) : setEnded(false)\n        setLoading(true)\n        setData([...data, ...newData])\n        setPage(page + 1)\n        setLoading(false)\n        setNewPageLoading(false)\n    }\n\n    const onError = () => {\n        setLoading(false)\n        setError(true)\n    }\n\n    const spinner = loading ? <Spinner/> : null;\n    const errorMessage = error ? <ErrorMessage/> : null; \n    const content = !(loading && error) ? <MoviesList onRequest={onRequest} data={data} baseURL={baseURL} ended={ended} newPageLoading={newPageLoading}/> : null;\n\n    return (\n        <>\n            {spinner}\n            {errorMessage}\n            {content}\n        </>\n    )\n}\n\nexport default GenreList;","import { useState, useEffect } from \"react\";\n\nimport useMovieService from \"../../service/MovieService\";\n\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\nimport GenreList from \"../genreList/GenreList\";\n\nconst GenrePage = () => {\n  const [baseURL, setBaseURL] = useState(\"\");\n\n  const { getConfiguration } = useMovieService();\n\n  useEffect(() => {\n    getConfiguration().then(({ base_url, poster_sizes }) =>\n      setBaseURL(`${base_url}${poster_sizes[5]}`)\n    );\n  }, []);\n\n  return (\n    <>\n      <ErrorBoundary>\n        <GenreList baseURL={baseURL} />\n      </ErrorBoundary>\n    </>\n  );\n};\n\nexport default GenrePage","import { Link } from \"react-router-dom\";\n\nimport OwlCarousel from \"react-owl-carousel\";\nimport \"owl.carousel/dist/assets/owl.carousel.css\";\nimport \"owl.carousel/dist/assets/owl.theme.default.css\";\n\nconst RecommendationsCarousel = ({ data, baseURL }) => {\n  const renderItems = (items) => {\n    return items.map((item, i) => (\n      <Link to={`/movie/${item.id}`} key={i}>\n        <div className=\"item\">\n          <img\n            src={\n              item.poster_path\n                ? baseURL + item.poster_path\n                : \"https://cdn.browshot.com/static/images/not-found.png\"\n            }\n            alt=\"\"\n            height={300}\n          />\n        </div>\n      </Link>\n    ));\n  };\n\n  const options = {\n    items: 5,\n    margin: 20,\n    lazyLoad: true,\n    loop: true,\n    autoplay: true,\n    autoplayTimeout: 3000,\n    autoplayHoverPause: true,\n  };\n\n  const markup = renderItems(data);\n\n  return (\n    <div className=\"overfvow pt-2 bg-dark\">\n      <div className=\"container\">\n        <OwlCarousel className=\"owl-theme\" {...options}>\n          {markup}\n        </OwlCarousel>\n      </div>\n    </div>\n  );\n};\n\nexport default RecommendationsCarousel;\n","import { useState, useEffect } from \"react\";\n\nimport { useParams } from \"react-router-dom\";\n\nimport OwlCarousel from \"react-owl-carousel\";\nimport \"owl.carousel/dist/assets/owl.carousel.css\";\nimport \"owl.carousel/dist/assets/owl.theme.default.css\";\n\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport RecommendationsCarousel from \"../recommendationsCarousel/RecommendationsCarousel\";\nimport MovieService from \"../../service/MovieService\";\n\nimport \"./singleMoviePage.css\";\n\nconst SingleMoviePage = () => {\n  const { movieID } = useParams();\n\n  const [moiveData, setMovieData] = useState(null);\n  const [baseURL, setBaseURL] = useState(\"\");\n  const [reccomendationsData, setReccomendationsData] = useState(null);\n\n  const {\n    loading,\n    error,\n    getDetails,\n    clearError,\n    getConfiguration,\n    getRecommendations,\n  } = MovieService();\n\n  useEffect(() => {\n    getConfiguration().then(({ base_url, poster_sizes }) =>\n      setBaseURL(`${base_url}${poster_sizes[5]}`)\n    );\n  }, []);\n\n  useEffect(() => {\n    updateMovie();\n    getRecommendations(movieID).then(onReccomendationsLoaded);\n  }, [movieID]);\n\n  const updateMovie = () => {\n    clearError();\n    getDetails(movieID).then(onMovieLoaded);\n  };\n\n  const onMovieLoaded = (data) => {\n    setMovieData(data);\n    document.title = data.title;\n  };\n\n  const onReccomendationsLoaded = (data) => {\n    setReccomendationsData(data);\n  };\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error || !moiveData || !reccomendationsData) ? (\n    <ErrorBoundary>\n      <View data={moiveData} baseURL={baseURL} reccomendationsData={reccomendationsData}/>\n    </ErrorBoundary>\n  ) : null;\n\n  return (\n    <>\n      {errorMessage}\n      {spinner}\n      {content}\n    </>\n  );\n};\n\nconst View = ({ data, baseURL, reccomendationsData }) => {\n  return (\n    <>\n      <div className=\"movie\">\n        <div className=\"title\">\n          <div className=\"title_wrapper title-grid\">\n            <h3>{data.title}</h3>\n            <span>{data.original_title}</span>\n          </div>\n        </div>\n        <div className=\"poster\">\n          <img\n            src={\n              data.poster_path\n                ? baseURL + data.poster_path\n                : \"https://cdn.browshot.com/static/images/not-found.png\"\n            }\n            alt={data.title}\n          />\n        </div>\n        <div className=\"player\">Тут мог бы быть плеер</div>\n        <div className=\"details\">\n          <div className=\"details-inner\">\n            {data.overview ? data.overview : \"Нет описания данного фильма\"}\n          </div>\n        </div>\n        <div className=\"description\">\n          <div className=\"rate\">Популярность фильма: {data.popularity}</div>\n          <div className=\"sub_grid\">\n            <div className=\"sub_title\">Год</div>\n            <div className=\"sub_descr\">{data.release_date}</div>\n            <div className=\"sub_title\">Страна</div>\n            <div className=\"sub_descr\">\n              {data.production_countries &&\n                data.production_countries.map((item, i) => {\n                  if (i + 1 === data.production_countries.length) {\n                    return item + \".\";\n                  }\n                  return item + \", \";\n                })}\n            </div>\n            <div className=\"sub_title\">Жанр</div>\n            <div className=\"sub_descr\">\n              {data.genres &&\n                data.genres.map((item, i) => {\n                  if (i + 1 === data.genres.length) {\n                    return item + \".\";\n                  }\n                  return item + \", \";\n                })}\n            </div>\n            <div className=\"sub_title\">Время</div>\n            <div className=\"sub_descr\">{data.runtime}</div>\n          </div>\n        </div>\n        <div className=\"carousel_rec\">\n          <p>Реккомендации</p>\n        <RecommendationsCarousel data={reccomendationsData} baseURL={baseURL}/>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SingleMoviePage;\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport NavBar from \"../NavBar/NavBar\";\nimport {MainPage, SearchPage, GenrePage, SingleMoviePage} from '../pages'\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <ErrorBoundary>\n          <NavBar />\n        </ErrorBoundary>\n        <Switch>\n          <Route exact path=\"/\"><MainPage/></Route>\n\n          <Route exact path={\"/search/:query\"}><SearchPage/></Route>\n          <Route exact path={\"/genre/:genreID\"}><GenrePage/></Route>\n          <Route exact path={\"/movie/:movieID\"}><SingleMoviePage/></Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';  \nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\nimport './index.css';\nimport App from './components/app/App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}